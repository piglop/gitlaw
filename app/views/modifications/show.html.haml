- content_for(:title, t(".title", name: @modification.id))
- add_crumb @modification.original.title, @modification.original
- add_crumb @modification.title

.row
  .span2.affix-action-bar-parent
    .affix-action-bar
      = link_to t('.edit'), edit_modification_path(@modification), :class => 'btn' if can? :update, @modification
      = link_to t('.destroy'), modification_path(@modification), :method => "delete", :confirm => t('.confirm'), :class => 'btn btn-danger' if can? :destroy, @modification
      
  .span10
    .row
      .span5
        %h2= t(".original_text")
      .span5
        %h2= t(".modified_text")
    - dmp = DiffMatchPatch.new
    - lines = []
    - Diff::LCS.sdiff(@modification.original.text.split(/\r\n|\r|\n/), @modification.text.split(/\r\n|\r|\n/)).each do |data|
      - state, left, right = *data
      - left = left[1].to_s
      - right = right[1].to_s
      - if state == "="
        - lines << [left, right]
      - else
        - diffs = dmp.diff_main(left, right)
        - dmp.diff_cleanupSemantic(diffs)
        - old_text = ""
        - new_text = ""
        - diffs.each do |state, text|
          - case state
            - when :delete
              - old_text << "<strong>#{h text}</strong>"
            - when :insert
              - new_text << "<strong>#{h text}</strong>"
            - when :equal
              - old_text << "#{h text}"
              - new_text << "#{h text}"
        - lines << [old_text, new_text]
    - lines.each do |old, new|
      .row
        .span5
          %p!= old
        .span5
          %p!= new
